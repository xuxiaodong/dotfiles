# Please keep this gtkrc in sync with the other ones from Murrine based themes.

#gtk-color-scheme = "base_color:#FFFFFF\nfg_color:#1A1A1A\ntooltip_fg_color:#000000\nselected_bg_color:#7A5ADA\nselected_fg_color:#FFFFFF\ntext_color:#000000\nbg_color:#EAEAEA\ntooltip_bg_color:#F5F5C9"

gtk-color-scheme = "base_color:#FFFFFF\nfg_color:#1A1A1A\ntooltip_fg_color:#000000\nselected_bg_color:#67B8CB\nselected_fg_color:#FFFFFF\ntext_color:#000000\nbg_color:#EAEAEA\ntooltip_bg_color:#F5F5C9"

# menu delay
gtk-menu-popup-delay = 0

# button images
gtk-button-images = 0 

# icon sizes (small toolbar)
gtk-icon-sizes = "gtk-menu=16,16:\ngtk-button=16,16:\ngtk-dnd=16,16:\npanel-menu=16,16:\npanel=16,16:\ngtk-dialog=16,16:\ngtk-small-toolbar=16,16:\ngtk-large-toolbar=16,16:"

style "default" {
	xthickness = 1
	ythickness = 1

	#######################
	# Style Properties
	#######################
	GtkButton::child-displacement-x = 1
	GtkButton::child-displacement-y = 1
	GtkButton::default-border = { 0, 0, 0, 0 }

	GtkCheckButton::indicator-size = 14

	GtkPaned::handle-size = 6

	GtkRange::trough-border = 0
	GtkRange::slider-width = 15
	GtkRange::stepper-size = 15

	GtkScale::slider-length = 15
	GtkScale::trough-side-details = 0

	GtkScrollbar::min-slider-length = 30
	GtkMenuBar::internal-padding = 0
	GtkExpander::expander-size = 16
	GtkToolbar::internal-padding = 0
	GtkTreeView::expander-size = 14
	GtkTreeView::vertical-separator = 0

	GtkMenu::horizontal-padding = 0
	GtkMenu::vertical-padding = 0

	#GtkMenuBar::shadow_type = GTK_SHADOW_NONE
	#GtkToolbar::shadow_type = GTK_SHADOW_NONE

        #WnckTasklist::fade-overlay-rect = 0
	# The following line hints to gecko (and possibly other appliations)
	# that the entry should be drawn transparently on the canvas.
	# Without this, gecko will fill in the background of the entry.
        #GtkEntry::honors-transparent-bg-hint = 1

	####################
	# Color Definitions
	####################
	bg[NORMAL]        = @bg_color
	bg[PRELIGHT]      = shade (1.02, @bg_color)
	bg[SELECTED]      = @selected_bg_color
	bg[INSENSITIVE]   = @bg_color
	bg[ACTIVE]        = shade (0.9, @bg_color)

	fg[NORMAL]        = @fg_color
	fg[PRELIGHT]      = @fg_color
	fg[SELECTED]      = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
	fg[ACTIVE]        = @fg_color

	text[NORMAL]      = @text_color
	text[PRELIGHT]    = @text_color
	text[SELECTED]    = @selected_fg_color
	text[INSENSITIVE] = darker (@bg_color)
	text[ACTIVE]      = @selected_fg_color

	base[NORMAL]      = @base_color
	base[PRELIGHT]    = shade (0.95, @bg_color)
	base[SELECTED]    = shade (0.89, @selected_bg_color)
	base[INSENSITIVE] = @bg_color
	base[ACTIVE]      = shade (0.88, @selected_bg_color)

	engine "murrine"
	{
		rgba                = FALSE  # FALSE = disabled, TRUE = enabled
		animation           = TRUE
		colorize_scrollbar  = FALSE
		contrast            = 0.65  # 0.8 for less contrast, more than 1.0 for more contrast on borders
		glazestyle          = 0     # 0 = flat highlight, 1 = curved highlight, 2 = concave style, 3 = top curved highlight, 4 = beryl highlight
		gradients           = TRUE  # FALSE = disabled, TRUE = enabled
		#gradient_shades     = {1.07,1.02,1.01,1.0} # default: {1.1,1.0,1.0,1.1}
		gradient_shades     = {1.02,1.005,1.005,0.98} 
		highlight_ratio     = 1.0  # set highlight amount for buttons or widgets
		lightborder_ratio   = 1.15  # sets lightborder amount for buttons or widgets
		lightborderstyle    = 0     # 0 = lightborder on top side, 1 = lightborder on all sides
		listviewheaderstyle = 1     # 0 = flat, 1 = glassy, 2 = raised
		listviewstyle       = 1     # 0 = nothing, 1 = dotted
		menubaritemstyle    = 0     # 0 = menuitem look, 1 = button look
		menubarstyle        = 0     # 0 = flat, 1 = glassy, 2 = gradient, 3 = striped
		menuitemstyle       = 1     # 0 = flat, 1 = glassy, 2 = striped
		menustyle           = 0     # 0 = no vertical menu stripe, 1 = display vertical menu stripe
		reliefstyle         = 0     # 0 = flat, 1 = inset, 2 = shadow
		roundness           = 2     # 0 = squared, 1 = old default, more will increase roundness
		scrollbarstyle      = 0     # 0 = nothing, 1 = circles, 2 = handles, 3 = diagonal stripes, 4 = diagonal stripes and handles, 5 = horizontal stripes, 6 = horizontal stripes and handles
		sliderstyle         = 0     # 0 = nothing added, 1 = handles
		stepperstyle        = 0     # 0 = standard, 1 = integrated stepper handles, 2 = unknown
		toolbarstyle	    = 0     # 0 = flat, 1 = glassy, 2 = gradient
	}
}

style "wide" {
	xthickness = 2
	ythickness = 2


	bg[SELECTED]	= @selected_bg_color
}

style "wider" {
	xthickness = 3
	ythickness = 3


	bg[SELECTED]	= @selected_bg_color
}

style "spinbutton" {
}

style "scale" = "button"
{
        #xthickness = 3
        #ythickness = 3

	GtkRange       ::slider-width         = 15

	engine "murrine" 
	{
		#roundness = 6
        }
}

style "vscale" {
}

style "hscale" {
}

style "scrollbar" {
        #xthickness = 2
        #ythickness = 2

	bg[NORMAL]        = shade (0.995, @bg_color)
}

style "hscrollbar" {
}

style "vscrollbar" {
}

style "notebook_bg" {
	bg[NORMAL]        = shade (1.04, @bg_color)
}

style "button" = "wider"
{
	bg[NORMAL]        = shade (0.995, @bg_color)
	bg[PRELIGHT]      = shade (1.06, @bg_color)
	bg[ACTIVE]        = shade (0.92, @bg_color)

	bg[INSENSITIVE] = shade (1.0, @bg_color)

        engine "murrine" {
		contrast            = 0.45
        }
}

style "entry" = "wider"
{
        engine "murrine" {
                contrast            = 0.35
        }
}

# The color is changed by the notebook_bg style, this style
# changes the x/ythickness
style "notebook" {
	xthickness = 2
	ythickness = 2

	bg[ACTIVE]   = shade (0.98, @bg_color)
	bg[NORMAL]   = shade (1.2, @bg_color)
	bg[SELECTED] = @selected_bg_color
	#fg[ACTIVE]   = shade (0.34, @bg_color)

	engine "murrine" {
		contrast = 0.88
	}
}

style "tasklist" = "wide"
{
}

style "statusbar" {
}

style "comboboxentry" {
}

style "menubar" {
}

style "menu" = "wider"
{
	xthickness = 3
	ythickness = 3

	bg[NORMAL]        = shade (1.18, @bg_color)

        #engine "murrine" {
        #		roundness = 0
        #	}
}

style "menu_item" {
	xthickness = 2
	ythickness = 3

	bg[SELECTED]      = shade (0.95, @selected_bg_color)
	bg[PRELIGHT]      = shade (0.95, @selected_bg_color)
	fg[PRELIGHT]      = @selected_fg_color
}

# This style is there to modify the separator menu items. The goals are:
# 1. Get a specific height.
# 2. The line should go to the edges (ie. no border at the left/right)
style "separator_menu_item" {
	xthickness = 1
	ythickness = 0

	GtkSeparatorMenuItem::horizontal-padding = 0
	GtkWidget::wide-separators = 1
	GtkWidget::separator-width = 1
	GtkWidget::separator-height = 7
}

style "toolbar" {
	bg[NORMAL] = shade (1.04, @bg_color)
}

style "frame_title" {

	fg[NORMAL]        = lighter (@fg_color)
}

style "treeview" 
{
	bg[SELECTED] = @selected_bg_color
}

# The almost useless progress bar style
style "progressbar" {
	xthickness = 0
	ythickness = 0

	fg[PRELIGHT] = @selected_fg_color
  	bg[NORMAL]   = shade (0.98, @bg_color)
	bg[SELECTED] = @selected_bg_color

        #engine "murrine" {
		# Explicitly set the radius for the progress bars inside menu items.
                #roundness = 0
        #}
}

# This style is based on the default style, so that the colors from the button
# style are overriden again.
style "treeview_header" = "default" {
        #xthickness = 2
        #ythickness = 1

	bg[NORMAL]      = shade (0.99, @bg_color)
	bg[PRELIGHT]    = shade (1.06, @bg_color)
	bg[ACTIVE]      = shade (0.92, @bg_color)
	bg[INSENSITIVE] = shade (1.0, @bg_color)

	engine "murrine" {
		contrast     = 0.8
		gradient_shades     = {1.02,1.005,1.005,0.98}
	}
}

style "tooltips" {
        #xthickness = 4
        #ythickness = 4

	bg[NORMAL]        = @tooltip_bg_color
	fg[NORMAL]        = @tooltip_fg_color
}

style "nautilus_location" {

	bg[NORMAL]        = mix (0.60, shade (1.05, @bg_color), @selected_bg_color)
}

# Wrokaroudn style for places where the text color is used instead of the fg color.
style "text_is_fg_color_workaround" {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for menus where the text color is used instead of the fg color.
style "menuitem_text_is_fg_color_workaround" {

	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @selected_fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

# Workaround style for places where the fg color is used instead of the text color.
style "fg_is_text_color_workaround" {

	fg[NORMAL]        = @text_color
	fg[PRELIGHT]      = @text_color
	fg[SELECTED]      = @selected_fg_color
	fg[ACTIVE]        = @selected_fg_color
	fg[INSENSITIVE]   = darker (@bg_color)
}

# Style to set the toolbar to use a flat style. This is because the "New" button in
# Evolution is not drawn transparent. So if there is a gradient in the background it will
# look really wrong.
# See http://bugzilla.gnome.org/show_bug.cgi?id=446953.
style "evo_new_button_workaround" {

	engine "murrine" {
		toolbarstyle = 0
	}
}

#style "smaller-text" {
#	font_name = "7"
#}

style "radiocheck" = "default"
{
	text[NORMAL]	  = "#ffffff"
	text[PRELIGHT]    = "#ffffff"
}

#style "panel" {
	#fg[NORMAL]        = "#ffffff"
	#fg[PRELIGHT]      = "#ffffff"
	#fg[ACTIVE]        = "#ffffff"
	#bg[NORMAL]        = "#313131"
	#bg[PRELIGHT]      = "#313131"
	#bg[ACTIVE]        = "#262626"

	#engine "murrine" {
		 #contrast = 1.0
	#}

#}

style "handle" {
	bg[NORMAL]        = "#232323"
}

style "calendar" {
	engine "murrine" {
		roundness = 0
	}
}


###############################################################################
# The following part of the gtkrc applies the different styles to the widgets.
###############################################################################

# The default style is applied to every widget
class "GtkWidget" style "default"

class "GtkSeparator" style "wide"
class "GtkFrame" style "wide"
class "GtkCalendar" style "calendar"
class "GtkEntry" style "wider"

class "GtkSpinButton" style "spinbutton"
class "GtkScale" style "scale"
class "GtkVScale" style "vscale"
class "GtkHScale" style "hscale"
class "GtkScrollbar" style "scrollbar"
class "GtkHScrollbar" style "hscrollbar"
class "GtkVScrollbar" style "vscrollbar"
class "GtkToolbar" style "toolbar"

# General matching follows. The order is choosen so that the right styles override
# each other. EG. progressbar needs to be more important than the menu match.
widget_class "*<GtkNotebook>" style "notebook_bg"
# This is not perfect, it could be done better.
# (That is modify *every* widget in the notebook, and change those back that
# we really don't want changed)
widget_class "*<GtkNotebook>*<GtkEventBox>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkDrawingArea>" style "notebook_bg"
widget_class "*<GtkNotebook>*<GtkLayout>" style "notebook_bg"

widget_class "*<GtkButton>" style "button"
widget_class "*<GtkNotebook>" style "notebook"
widget_class "*<GtkStatusbar>*" style "statusbar"

widget_class "*<GtkComboBoxEntry>*" style "comboboxentry"
widget_class "*<GtkCombo>*" style "comboboxentry"

widget_class "*<GtkMenuBar>*" style "menubar"
widget_class "*<GtkMenu>*" style "menu"
widget_class "*<GtkMenuItem>*" style "menu_item"
widget_class "*<GtkSeparatorMenuItem>*" style "separator_menu_item"

widget_class "*.<GtkFrame>.<GtkLabel>" style "frame_title"
widget_class "*.<GtkTreeView>*" style "treeview"

widget_class "*<GtkProgress>" style "progressbar"

# Treeview headers (and similar stock GTK+ widgets)
widget_class "*.<GtkTreeView>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCTree>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkList>.<GtkButton>" style "treeview_header"
widget_class "*.<GtkCList>.<GtkButton>" style "treeview_header"

# The window of the tooltip is called "gtk-tooltip"
##################################################################
# FIXME:
# This will not work if one embeds eg. a button into the tooltip.
# As far as I can tell right now we will need to rework the theme
# quite a bit to get this working correctly.
# (It will involve setting different priorities, etc.)
##################################################################
widget "gtk-tooltip*" style "tooltips"

##########################################################################
# Following are special cases and workarounds for issues in applications.
##########################################################################

# Workaround for the evolution ETable (bug #527532)
widget_class "*.ETable.ECanvas" style "treeview_header"
# Workaround for the evolution ETree
widget_class "*.ETree.ECanvas" style "treeview_header"

# Special case the nautilus-extra-view-widget
# ToDo: A more generic approach for all applications that have a widget like this.
widget "*.nautilus-extra-view-widget" style : highest "nautilus_location"

# Work around for http://bugzilla.gnome.org/show_bug.cgi?id=382646
# Note that this work around assumes that the combobox is _not_ in appears-as-list mode.
style "combobox_text_color_workaround"
{
	text[NORMAL]      = @fg_color
	text[PRELIGHT]    = @fg_color
	text[SELECTED]    = @selected_fg_color
	text[ACTIVE]      = @fg_color
	text[INSENSITIVE] = darker (@bg_color)
}

widget_class "*.<GtkComboBox>.<GtkCellView>" style "combobox_text_color_workaround"
# This is the part of the workaround that fixes the menus
style "menuitem_text_is_fg_color_workaround"
{
	text[NORMAL]        = @fg_color
	text[PRELIGHT]      = @selected_fg_color
	text[SELECTED]      = @selected_fg_color
	text[ACTIVE]        = @fg_color
	text[INSENSITIVE]   = darker (@bg_color)
}

widget "*.gtk-combobox-popup-menu.*" style "menuitem_text_is_fg_color_workaround"

# Work around the usage of GtkLabel inside GtkListItems to display text.
# This breaks because the label is shown on a background that is based on the base color.
style "fg_is_text_color_workaround"
{
	fg[NORMAL]      = @text_color
	fg[PRELIGHT]    = @text_color
	fg[ACTIVE]      = @selected_fg_color
	fg[SELECTED]    = @selected_fg_color
	fg[INSENSITIVE] = darker (@bg_color)
}

widget_class "*<GtkListItem>*" style "fg_is_text_color_workaround"
# GtkCList also uses the fg color to draw text on top of the base colors.
widget_class "*<GtkCList>" style "fg_is_text_color_workaround"
# Nautilus when renaming files, and maybe other places.
widget_class "*<EelEditableLabel>" style "fg_is_text_color_workaround"

# See the documentation of the style.
widget_class "EShellWindow.GtkVBox.BonoboDock.BonoboDockBand.BonoboDockItem*" style "evo_new_button_workaround"

# Text
#widget_class "*ToolButton*" style "smaller-text"
#widget_class "*Statusbar*" style "smaller-text"

# Radiocheck
class "GtkCheck*" style "radiocheck"

# Panel
#class "*Panel*" style "panel"
#class "*notif*" style "panel"
#class "*Notif*" style "panel"
#class "*Tray*" style "panel"
#class "*tray*" style "panel"
#class "PanelAppletFrame" style "handle"
#widget_class "*Mail*" style "panel"
#widget "*PanelWidget*" style "panel"
#widget "*PanelApplet*" style "panel"
